# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import streaming_voice_pb2 as streaming__voice__pb2


class StreamVoiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SendVoice = channel.stream_stream(
        '/streaming_voice.StreamVoice/SendVoice',
        request_serializer=streaming__voice__pb2.VoiceRequest.SerializeToString,
        response_deserializer=streaming__voice__pb2.TextReply.FromString,
        )


class StreamVoiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SendVoice(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_StreamVoiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SendVoice': grpc.stream_stream_rpc_method_handler(
          servicer.SendVoice,
          request_deserializer=streaming__voice__pb2.VoiceRequest.FromString,
          response_serializer=streaming__voice__pb2.TextReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'streaming_voice.StreamVoice', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
